{"version":3,"sources":["components/login/login.js","components/signup/signup.js","components/dashboard/dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Login","signup","Dashboard","useState","posts","setPosts","loading","setLoading","useEffect","axios","get","then","res","newPosts","data","children","map","item","console","log","catch","err","post","i","className","author","Math","floor","created","title","href","url","target","selftext","src","secure_media","App","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRASeA,EANF,WACT,OACI,wCCIOC,EARO,WAClB,OACI,yC,yBCkCOC,G,MAjCE,WAAM,IAAD,EACOC,mBAAS,IADhB,mBACXC,EADW,KACLC,EADK,OAESF,oBAAS,GAFlB,mBAEXG,EAFW,KAEHC,EAFG,KAYlB,OATAC,qBAAU,WACRC,IAAMC,IAAI,yCAAyCC,MAAK,SAAAC,GACtD,IAAMC,EAAWD,EAAIE,KAAKA,KAAKC,SAASC,KAAI,SAAAC,GAAI,OAAEA,EAAKH,QACvDI,QAAQC,IAAIN,GACZR,EAASQ,GACTN,GAAW,MACVa,OAAM,SAAAC,GAAG,OAAEA,OACd,IACFH,QAAQC,IAAIf,GAEV,gCACE,wCACCE,EAAS,4CAAqBF,EAAMY,KAAI,SAACM,EAAKC,GAAM,OACnD,sBAAKC,UAAU,OAAf,UAEE,gCAAO,4CAAeF,EAAKG,OAApB,IAA6BC,KAAKC,MAAML,EAAKM,QAAL,OAAxC,iBACP,6BAAKN,EAAKO,QAAW,uBACrB,mBAAGC,KAAMR,EAAKS,IAAKC,OAAO,SAA1B,2BAEA,4BAAIV,EAAKW,WACT,qBAAKC,IAAKZ,EAAKa,iBAPUZ,WCoBtBa,MAlCf,WACE,OAEE,qBAAKZ,UAAU,MAAf,SACA,eAAC,IAAD,WACE,qBAAKA,UAAU,SAAf,SACE,+BACE,6BACE,cAAC,IAAD,CAAMa,GAAG,IAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,UAAT,sBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,6BAIN,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,eCpBKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2c5987d2.chunk.js","sourcesContent":["import './login.css'\n\n\nconst Login =() =>{\n    return(\n        <h1>Login</h1>\n        \n    )\n}\nexport default Login","\nexport const signup = () => {\n    return (\n        <h1>\n            signup\n        </h1>\n    )\n}\n\nexport default signup\n","import axios from \"axios\"\nimport { useEffect, useState } from \"react\"\nimport './dashboard.css'\n\nconst Dashboard =() =>{\n    const [posts,setPosts] = useState([])\n    const [loading,setLoading]=useState(true)\n    useEffect(()=>{\n      axios.get('https://www.reddit.com/r/reactjs.json').then(res=>{\n        const newPosts = res.data.data.children.map(item=>item.data)\n        console.log(newPosts);\n        setPosts(newPosts)\n        setLoading(false)\n      }).catch(err=>err)\n    },[])\n    console.log(posts);\n    return (\n      <div >\n        <h1>Reddit</h1>\n        {loading?(<p>Loading....</p>):(posts.map((post,i)=>{ return(\n          <div className='card' key={i}>\n            \n            <small><h5>Posted by {post.author} {Math.floor(post.created / (1000 * 60 * 60 * 24))} days ago</h5></small>\n            <h3>{post.title}</h3><br />\n            <a href={post.url} target=\"_blank\">original post</a>\n  \n            <p>{post.selftext}</p>\n            <img src={post.secure_media} />\n  \n           </div> \n            )\n        }))}\n      </div>\n    );\n}\n\n\nexport default Dashboard","import './App.css';\nimport { useEffect, useState } from 'react';\nimport {BrowserRouter as Router,Route,Link, Switch} from 'react-router-dom'\nimport Login from './components/login/login'\nimport Signup from './components/signup/signup'\nimport Dashboard from './components/dashboard/dashboard'\nfunction App() {\n  return(\n\n    <div className='nav'>\n    <Router>\n      <nav className=\"navbar\">\n        <ul>\n          <li>\n            <Link to='/'>Login</Link>\n          </li>\n          <li>\n            <Link to='/signup'>signup</Link>\n          </li>\n          <li>\n            <Link to='/dashboard'>dasboard</Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route exact path='/'>\n          <Login />\n          </Route>\n        <Route exact path='/signup'>\n          <Signup />\n          </Route>\n        <Route exact path='/dashboard'>\n          <Dashboard />\n        </Route>\n      </Switch>\n    </Router>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}